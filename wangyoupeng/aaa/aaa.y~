%{
#include "aaa.h"
%}

%union {
    double  dbval;
    char    * string;
}


%token V
%token FROM
%token AT
%token UP
%token ANGLE
%token HITHER
%token RESOLUSION
%token B

%token <string> NUMERAL

%token EOL

%type <dbval> dbvalue

%%

element:        /* nothing */
            |   element background_color
            |   element viewpoint  
            ;
background_color:
                B dbvalue dbvalue dbvalue EOL          {printf("we get the background_color:Br=%g,Bb=%g,Bg=%g \n",$2, $3, $4);}
            ;
viewpoint:      V EOL v_param_list       
            ; 
v_param_list:   v_param                   
            |   v_param_list v_param      
            ;
v_param:        FROM dbvalue dbvalue dbvalue EOL       {printf("the viewpointis at(%g,%g,%g)\n",$2, $3, $4); }
            |   AT dbvalue dbvalue dbvalue EOL         {printf("the direction you look at is(%g,%g,%g)\n",$2, $3, $4); }
            |   UP dbvalue dbvalue dbvalue EOL         {printf("you'll look up to(%g,%g,%g)\n",$2, $3, $4); }
            |   ANGLE dbvalue EOL                      {printf("the angle is %g\n",$2); }  
            |   HITHER dbvalue EOL                     {printf("the height is %g\n",$2); }
            |   RESOLUSION dbvalue dbvalue EOL         {printf("the resolution is (%g,%g)\n",$2,$3); }
            ;
dbvalue:        NUMERAL { $$ = atof($1); }
            ;
%%

yyerror (s) /* 语法分析函数 yyparse()出错时调用该函数 */
char *s;
{
}

